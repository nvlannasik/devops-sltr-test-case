name: CI/CD for Mono Repo

on:
  push:
    tags:
      - "release-*"

jobs:
  build-push-and-update-manifest:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ./App
          file: ./App/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/welcome:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/welcome:${{ github.ref_name }}

      - name: Update manifest
        run: |
          NEW_IMAGE="${{ secrets.DOCKERHUB_USERNAME }}/welcome:${{ github.ref_name }}"
          sed -i "s|image: .*|image: $NEW_IMAGE|" ./Manifest/apps/deployment.yml
          git config --global user.email "annasikn@yahoo.com"
          git config --global user.name "nvlannasik"
          git remote set-url origin https://x-access-token:${{ secrets.GH_PAT }}@github.com/nvlannasik/devops-sltr-test-case.git
          git add ./Manifest/apps/deployment.yml
          git commit -m "Update deployment image to $NEW_IMAGE"
          git push origin HEAD:master

  sync-argocd:
    needs: build-push-and-update-manifest
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install ArgoCD CLI
        run: |
          curl -sSL -o /usr/local/bin/argocd https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
          chmod +x /usr/local/bin/argocd

      - name: Sync All ArgoCD Apps
        run: |
          argocd login ${{ secrets.ARGOCD_SERVER }} --username ${{ secrets.ARGOCD_USERNAME }} --password ${{ secrets.ARGOCD_PASSWORD }} --insecure
          APPS=welcome-services
          argocd app sync $APPS
